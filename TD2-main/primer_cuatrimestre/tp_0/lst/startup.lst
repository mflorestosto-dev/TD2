ARM GAS  src/startup.s 			page 1


   1              	/*
   2              	_table_isr:
   3              	Contiene los punteros a los handlers. Cada vector de excepción carga la dirección de su handler c
   4              	
   5              	copy_loop:
   6              	Copia la tabla de vectores a la posición 0 (donde el procesador espera que estén los vectores). 
   7              	Esto es típico en sistemas ARM antiguos donde la tabla debe estar en la dirección 0x00000000.
   8              	
   9              	idle:
  10              	Un bucle infinito para “esperar” o “dormir”.
  11              	 */
  12              	
  13              	.extern	_reset_vector
  14              	.extern undef_handler
  15              	.extern swi_handler
  16              	.extern prefetch_abort
  17              	.extern data_abort
  18              	.extern reserved_handler
  19              	.extern irq_handler
  20              	.extern fiq_handler
  21              	.global _start
  22              	
  23              	.code 32
  24              	
  25              	.section .start:
  26              	_table_isr:
  27 0000 18F09FE5 		LDR PC, literal_reset_vector
  28 0004 18F09FE5 	    LDR PC, literal_undef_handler      // Undefined instruction
  29 0008 18F09FE5 	    LDR PC, literal_swi_handler        // Software interrupt
  30 000c 18F09FE5 	    LDR PC, literal_prefetch_abort     // Prefetch abort
  31 0010 18F09FE5 	    LDR PC, literal_data_abort         // Data abort
  32 0014 18F09FE5 	    LDR PC, literal_reserved_handler   // Reserved
  33 0018 18F09FE5 	    LDR PC, literal_irq_handler        // IRQ
  34 001c 18F09FE5 	    LDR PC, literal_fiq_handler        // FIQ
  35              	
  36              	
  37 0020 00000000 	literal_reset_vector 		: .word _reset_vector
  38 0024 00000000 	literal_undef_handler 		: .word undef_handler
  39 0028 00000000 	literal_swi_handler 		: .word swi_handler
  40 002c 00000000 	literal_prefetch_abort 		: .word prefetch_abort
  41 0030 00000000 	literal_data_abort 			: .word data_abort
  42 0034 00000000 	literal_reserved_handler 	: .word reserved_handler
  43 0038 00000000 	literal_irq_handler 		: .word irq_handler
  44 003c 00000000 	literal_fiq_handler 		: .word fiq_handler
  45              	
  46              	
  47              	_start:
  48 0040 0000A0E3 	    LDR r0, = #0                        // Direccion destino
  49 0044 14109FE5 	    LDR r1, = _table_isr                // Dirección destino
  50 0048 14209FE5 	    LDR r2, = _start                    // Dirección final
  51              	
  52              	copy_loop:
  53 004c 043091E4 	    LDR r3, [r1], #4
  54 0050 043080E4 	    STR r3, [r0], #4
  55 0054 020051E1 		CMP r1, r2
  56 0058 FBFFFF1A 	    BNE copy_loop
  57              	
ARM GAS  src/startup.s 			page 2


  58              	idle:
  59 005c FEFFFFEA 		B irq_handler
  59      00000000 
  59      00000000 
ARM GAS  src/startup.s 			page 3


DEFINED SYMBOLS
       src/startup.s:47     .start::00000040 _start
       src/startup.s:26     .start::00000000 _table_isr
       src/startup.s:37     .start::00000020 literal_reset_vector
       src/startup.s:27     .start::00000000 $a
       src/startup.s:38     .start::00000024 literal_undef_handler
       src/startup.s:39     .start::00000028 literal_swi_handler
       src/startup.s:40     .start::0000002c literal_prefetch_abort
       src/startup.s:41     .start::00000030 literal_data_abort
       src/startup.s:42     .start::00000034 literal_reserved_handler
       src/startup.s:43     .start::00000038 literal_irq_handler
       src/startup.s:44     .start::0000003c literal_fiq_handler
       src/startup.s:37     .start::00000020 $d
       src/startup.s:48     .start::00000040 $a
       src/startup.s:52     .start::0000004c copy_loop
       src/startup.s:58     .start::0000005c idle
       src/startup.s:59     .start::00000060 $d

UNDEFINED SYMBOLS
_reset_vector
undef_handler
swi_handler
prefetch_abort
data_abort
reserved_handler
irq_handler
fiq_handler
